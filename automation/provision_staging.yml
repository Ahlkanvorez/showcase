---

- name: Build and run docker image
  hosts: build_server
  gather_facts: yes
  become: yes
  become_user: ansible

  tasks:
    - name: Create temporary dir for source repository
      tempfile:
        state: directory
        prefix: "{{ site_project_name }}"
      changed_when: false
      register: repo_dir

    - name: Checkout source repository
      git:
        repo: "{{ site_source_repository }}"
        dest: "{{ repo_dir.path }}"

    - name: Login with docker
      docker_login:
        username: "{{ vault_docker_username }}"
        password: "{{ vault_docker_access_token }}"
      become: yes
      become_user: root
      changed_when: false

    - name: Ensure telemetry network exists
      docker_network:
        name: product-monitor-telemetry
      become: yes
      become_user: root

    - name: Ensure graphite-statsd storage volume exists
      docker_volume:
        name: graphite-statsd-storage
        state: present
      become: yes
      become_user: root

    - name: Ensure grafana volume exists
      docker_volume:
        name: grafana-storage
        state: present
      become: yes
      become_user: root

    - name: Ensure Graphite-Statsd container is running
      docker_container:
        name: graphite01
        image: graphiteapp/graphite-statsd
        volumes:
          - graphite-statsd-storage:/opt/graphite/storage
        networks:
          - name: product-monitor-telemetry
      become: yes
      become_user: root

    - name: Ensure Grafana container is running
      docker_container:
        name: grafana01
        image: grafana/grafana
        env:
          GF_SERVE_FROM_SUB_PATH: "true"
          GF_SERVER_DOMAIN: "ahlk.io"
          GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        volumes:
          - grafana-storage:/var/lib/grafana
        networks:
          - name: product-monitor-telemetry
      become: yes
      become_user: root

    - name: Build docker image and push to dockerhub
      docker_image:
        build:
          path: "{{ repo_dir.path }}"
        name: "{{ site_container.image }}"
        tag: "{{ site_container.tag }}"
        push: yes
        source: build
      become: yes
      become_user: root

    - name: Start docker container
      docker_container:
        name: "{{ site_container.name }}"
        image: "{{ site_container.image }}:{{ site_container.tag }}"
        state: started
        networks:
          - name: product-monitor-telemetry
        volumes:
          - /etc/showcase/edn/:/showcase/resources/public/showcase/edn/:ro
          - /etc/showcase/config/:/showcase/config/:ro
        restart: yes
      become: yes
      become_user: root

    - name: Prune docker artifacts
      docker_prune:
        containers: yes
        images: yes
        networks: yes
        volumes: yes
        builder_cache: yes
      become: yes
      become_user: root

    - name: Logout of docker
      docker_login:
        state: absent
      become: yes
      become_user: root
      changed_when: false

    - name: Cleanup temporary dir
      file:
        path: "{{ repo_dir.path }}"
        state: absent
      changed_when: false
...
